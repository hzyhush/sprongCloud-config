spring:
  profiles:
    active: dev

---
server:
  port: 8001

spring:
  profiles: dev
  application:
    name: microservicecloud-provider
  datasource:
    username: root
    password: root
    url: jdbc:mysql://127.0.0.1:3306/springboot?useUnicode=true&characterEncoding=utf8&characterSetResults=utf8
    driver-class-name: com.mysql.jdbc.Driver
    type: com.alibaba.druid.pool.DruidDataSource
    # 下面为连接池的补充设置，应用到上面所有数据源中
    # 初始化大小，最小，最大
    initialSize: 50
    minIdle: 100
    maxActive: 1000
    # 配置获取连接等待超时的时间
    maxWait: 15000
    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
    timeBetweenEvictionRunsMillis: 60000
    # 配置一个连接在池中最小生存的时间，单位是毫秒
    minEvictableIdleTimeMillis: 300000
    validationQuery: SELECT 1 FROM DUAL
    testWhileIdle: true
    testOnBorrow: false
    testOnReturn: false
    # 打开PSCache，并且指定每个连接上PSCache的大小
    poolPreparedStatements: true
    maxPoolPreparedStatementPerConnectionSize: 20
    # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙，此处是filter修改的地方
    filters: stat,wall
    # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
    # 合并多个DruidDataSource的监控数据
    useGlobalDataSourceStat: true

mybatis:
  mapper-locations: classpath:mapping/*.xml #mapper映射xml文件的所在路径
  type-aliases-package: com.my.springcloud.microservicecloudapi.entity #实体类映射文件的所在路径
  configuration:
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl #打印sql

eureka:
  instance:
    instance-id: microservicecloud-config-provider:8001 #修改服务名称
    prefer-ip-address: true #显示ip
  client:
    service-url:
      #defaultZone: http://localhost:7001/eureka/  #将服务注册到eureka注册中心
      defaultZone: http://eureka7001.com:7001/eureka/

#配置eureka服务信息
info:
  app.name: microservicecloud-provider #名称
  company.name: hzy-provider  #公司名称
  build.artifactId: $project.artifactId$  #artifactId$
  build.version: $project.version$ #版本号

---
server:
  port: 8001

spring:
  profiles: test
  application:
    name: microservicecloud-provider
  datasource:
    username: root
    password: root
    url: jdbc:mysql://127.0.0.1:3306/springboot2?useUnicode=true&characterEncoding=utf8&characterSetResults=utf8
    driver-class-name: com.mysql.jdbc.Driver
    type: com.alibaba.druid.pool.DruidDataSource
    # 下面为连接池的补充设置，应用到上面所有数据源中
    # 初始化大小，最小，最大
    initialSize: 50
    minIdle: 100
    maxActive: 1000
    # 配置获取连接等待超时的时间
    maxWait: 15000
    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
    timeBetweenEvictionRunsMillis: 60000
    # 配置一个连接在池中最小生存的时间，单位是毫秒
    minEvictableIdleTimeMillis: 300000
    validationQuery: SELECT 1 FROM DUAL
    testWhileIdle: true
    testOnBorrow: false
    testOnReturn: false
    # 打开PSCache，并且指定每个连接上PSCache的大小
    poolPreparedStatements: true
    maxPoolPreparedStatementPerConnectionSize: 20
    # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙，此处是filter修改的地方
    filters: stat,wall
    # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
    # 合并多个DruidDataSource的监控数据
    useGlobalDataSourceStat: true

mybatis:
  mapper-locations: classpath:mapping/*.xml #mapper映射xml文件的所在路径
  type-aliases-package: com.my.springcloud.microservicecloudapi.entity #实体类映射文件的所在路径
  configuration:
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl #打印sql

eureka:
  instance:
    instance-id: microservicecloud-config-provider:8001 #修改服务名称
    prefer-ip-address: true #显示ip
  client:
    service-url:
      #defaultZone: http://localhost:7001/eureka/  #将服务注册到eureka注册中心
      defaultZone: http://eureka7001.com:7001/eureka/

#配置eureka服务信息
info:
  app.name: microservicecloud-provider #名称
  company.name: hzy-provider  #公司名称
  build.artifactId: $project.artifactId$  #artifactId$
  build.version: $project.version$ #版本号